(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var r=n.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"ce7ddc11e4f52594fa5b.jpg";function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){var r=t.data,o=t.handleImageOpenPopup,i=t.handleRemoveClick,a=t.userId,u=t.putLikeCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=r,this._cardSelector=n,this._handleImageOpenPopup=o,this._handleRemoveClick=i,this._userId=a,this._putLikeCard=u}var r,o;return r=e,(o=[{key:"generateCard",value:function(){var e,t,n;return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__image"),this._likeButton=this._element.querySelector(".element__like"),this._countersLikes=this._element.querySelector(".element__counters-likes"),this._countingLike(),this._deleteСard=this._element.querySelector(".element__baskets"),this._removeBacked(),this._setEventListenersAll(),this._element.querySelector(".element__title").textContent=null===(e=this._data)||void 0===e?void 0:e.name,this._cardImage.src=null===(t=this._data)||void 0===t?void 0:t.link,this._cardImage.alt=null===(n=this._data)||void 0===n?void 0:n.link,this._element}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"isLiked",value:function(){var e=this;return this._data.likes.some((function(t){return t._id===e._userId}))}},{key:"_countingLike",value:function(){this._countersLikes.textContent=this._data.likes.length,this.isLiked()?this._likeButton.classList.add("element__like_active"):this._likeButton.classList.remove("element__like_active")}},{key:"resetLikeData",value:function(e){this._data.likes=e.likes,this._countingLike()}},{key:"_removeBacked",value:function(){this._data.owner._id===this._userId?this._deleteСard.classList.add("element__baskets_active"):this._deleteСard.classList.remove(".element__baskets_active")}},{key:"remove",value:function(){this._element.remove(".element"),this._element=null}},{key:"_setEventListenersAll",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._putLikeCard(e)})),this._deleteСard.addEventListener("click",(function(){return e._handleRemoveClick(e)})),this._cardImage.addEventListener("click",(function(){e._handleImageOpenPopup(e._data)})),this._cardImage.addEventListener("error",(function(){e._data.link=t,e._cardImage.src=t,e._element.querySelector(".element__title").textContent="Картинка впути"}))}},{key:"getId",value:function(){return this._data._id}}])&&n(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._buttonElement=this._formElement.querySelector(this._config.buttonElement),this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputPopup))}var t,n;return t=e,(n=[{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._inputElement=t,e._isValid(),e._toggleButtonState()}))}))}},{key:"_isValid",value:function(){this._inputElement.validity.valid?this._hideInputError():this._showInputError()}},{key:"_showInputError",value:function(){var e=this._inputElement.validationMessage;this._errorElement=this._formElement.querySelector("#error-".concat(this._inputElement.id)),this._conteinerElement=this._errorElement.closest(this._config.conteinerInput),this._conteinerElement.classList.add(this._config.inputConteinerInvalid),this._errorElement.textContent=e}},{key:"_hideInputError",value:function(){this._errorElement=this._formElement.querySelector("#error-".concat(this._inputElement.id)),this._conteinerElement=this._errorElement.closest(this._config.conteinerInput),this._conteinerElement.classList.remove(this._config.inputConteinerInvalid),this._errorElement.textContent=" "}},{key:"disabledButton",value:function(){this._buttonElement.classList.add(this._config.inactiveButton),this._buttonElement.setAttribute("disabled","disabled")}},{key:"disabledButtonActiv",value:function(){this._buttonElement.classList.remove(this._config.inactiveButton),this._buttonElement.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disabledButton():this.disabledButtonActiv()}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputList).some((function(e){return!e.validity.valid}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._conteiner=document.querySelector(t)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._conteiner.prepend(e)}},{key:"rendererItem",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function v(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function a(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return f(this,a),(n=i.call(this,e))._form=n._popup.querySelector(t),n._submitHandler=r,n._inputElements=n._form.querySelectorAll(".popup__input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputElements.forEach((function(t){e[t.name]=t.value})),e}},{key:"changeSubmitHandler",value:function(e){this._submitHandler=e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler(e._getInputValues())})),h(y(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){h(y(a.prototype),"close",this).call(this),this._form.reset()}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=w(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function O(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imageCard=t._popup.querySelector(".popup__image"),t._popupHeading=t._popup.querySelector(".popup__heading"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._imageCard.src=n,this._imageCard.alt=t,this._popupHeading.textContent=t,k(S(a.prototype),"open",this).call(this)}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.data,r=t.profileText,o=t.profileTitle,i=t.pofileAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=n,this._name=r,this._about=o,this._avatar=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),j={formElement:".popup__form",inputPopup:".popup__input",buttonElement:".popup__button",inactiveButton:"button_inactive",inputErrorClass:"popup__input_error",errorClass:"popup__error_visible",inputConteinerInvalid:"input-conteiner__invalid",conteinerInput:".input-conteiner"},I=document.querySelector(".profile__title"),T=document.querySelector(".profile__text"),q=document.querySelector(".profile__avatar");function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var B=new WeakSet;function R(e){return e.ok?e.json():Promise.reject({message:"Ошибка отправки картинки на стороне сервера",response:e})}function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var D=new(function(){function e(t){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(n=this,r=B),r.add(n),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getAllTasks",value:function(){var e=this;return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then((function(t){return x(e,B,R).call(e,t)}))}},{key:"getAllInfo",value:function(){return Promise.all([this.getAllProfile(),this.getAllTasks()])}},{key:"addNewTasks",value:function(e){var t=this;return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return x(t,B,R).call(t,e)}))}},{key:"removeCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return x(t,B,R).call(t,e)}))}},{key:"getAllProfile",value:function(){var e=this;return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then((function(t){return x(e,B,R).call(e,t)}))}},{key:"addNewProfile",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return x(t,B,R).call(t,e)}))}},{key:"changeLike",value:function(e,t){var n=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:t?"DELETE":"PUT",headers:this._headers}).then((function(e){return x(n,B,R).call(n,e)}))}},{key:"addNewAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return x(t,B,R).call(t,e)}))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({url:"https://mesto.nomoreparties.co/v1/cohort-54",headers:{"content-type":"application/json",authorization:" b84c7223-66c7-4859-b33f-9b1c192b5f07"}}),H=document.querySelector(".profile__edit-button"),V=document.querySelector(".popup__form_edit-button"),U=document.querySelector(".popup__button"),$=new P({profileText:T,profileTitle:I,pofileAvatar:q});D.getAllInfo().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?N(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];oe=o._id,ie.rendererItem(i),$.setUserInfo(o)})).catch((function(e){console.log("Ошибка",e)}));var z=new i(j,V);z.enableValidation();var J=new m(".popup_edit-button",".popup__form_edit-button",(function(e){var t=U.textContent;U.textContent="Сохранение...",D.addNewProfile(e).then((function(e){$.setUserInfo(e),J.close()})).finally((function(){U.textContent=t})).catch((function(e){console.log("Ошибка",e)}))}));J.setEventListeners(),H.addEventListener("click",(function(){J.open(),z.disabledButton()}));var G=document.querySelector(".profile__avatar"),M=document.querySelector(".popup__form_changing-avatar"),F=document.querySelector(".popup__button-avatar"),W=new i(j,M);W.enableValidation();var K=new m(".popup_changing-avatar",".popup__form_changing-avatar",(function(e){var t=F.textContent;F.textContent="Сохранение...",D.addNewAvatar(e.avatar).then((function(e){$.setUserInfo(e),K.close()})).finally((function(){F.textContent=t})).catch((function(e){console.log("Ошибка",e)}))}));function Q(e){ee.open(e)}K.setEventListeners(),G.addEventListener("click",(function(){K.open(),W.disabledButton()}));var X=new m(".popup_remove",".popup__form_remove");function Y(e){X.open(),X.changeSubmitHandler((function(){D.removeCard(e.getId()).then((function(){e.remove(),X.close()})).catch((function(e){console.log("Ошибка",e)}))}))}function Z(e){D.changeLike(e.getId(),e.isLiked()).then((function(t){e.resetLikeData(t)})).catch((function(e){console.log("Ошибка",e)}))}X.setEventListeners();var ee=new L(".popup_zoom");function te(e){return new r({data:e,handleImageOpenPopup:Q,handleRemoveClick:Y,userId:oe,putLikeCard:Z},".elements-template").generateCard()}ee.setEventListeners();var ne=document.querySelector(".popup__form_add-button"),re=document.querySelector(".profile__add-button"),oe=null,ie=new u(".elements",(function(e){ie.addItem(te(e))})),ae=new i(j,ne);ae.enableValidation();var ue=document.querySelector(".popup__button-add"),ce=new m(".popup_add-button",".popup__form_add-button",(function(e){var t=ue.textContent;ue.textContent="Создание...",D.addNewTasks(e).then((function(e){ie.addItem(te(e)),ce.close()})).finally((function(){ue.textContent=t})).catch((function(e){console.log("Ошибка",e)}))}));ce.setEventListeners(),re.addEventListener("click",(function(){ce.open(),ae.disabledButton()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFDM0I4TCxHQUFhdEcsT0FDZCxJQUNBNEUsU0FBUSxXQUNQeUIsR0FBaUJ4SyxZQUFjNEksQ0FDaEMsSUFDQVAsT0FBTSxTQUFTQyxHQUNkQyxRQUFRQyxJQUFJLFNBQVVGLEVBQ3ZCLEdBQ0YsSUFHRG1DLEdBQWF6QixvQkFFYnFCLEdBQWN0SixpQkFBaUIsU0FBUyxXQUN0QzBKLEdBQWF4QixPQUNic0IsR0FBaUJySCxnQkFDbEIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vbWVzdG8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsImltcG9ydCBpbWFnZUdsYXNzIGZyb20gXCIuLi9pbWFnZXMv0KHRgtC10LrQu9C+LmpwZ1wiO1xuXG5leHBvcnQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHsgZGF0YSwgaGFuZGxlSW1hZ2VPcGVuUG9wdXAgLCBoYW5kbGVSZW1vdmVDbGljayAsIHVzZXJJZCwgcHV0TGlrZUNhcmR9LCBjYXJkU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlSW1hZ2VPcGVuUG9wdXAgPSBoYW5kbGVJbWFnZU9wZW5Qb3B1cDtcbiAgICB0aGlzLl9oYW5kbGVSZW1vdmVDbGljayA9IGhhbmRsZVJlbW92ZUNsaWNrO1xuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcbiAgICB0aGlzLl9wdXRMaWtlQ2FyZCA9IHB1dExpa2VDYXJkO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19pbWFnZVwiKTtcbiAgICBcbiAgICAvKtCg0LDQsdC+0YLQsCDRgSDQu9Cw0LnQutC+0LwqL1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fbGlrZVwiKTtcbiAgICB0aGlzLl9jb3VudGVyc0xpa2VzPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fY291bnRlcnMtbGlrZXNcIik7XG4gICAgdGhpcy5fY291bnRpbmdMaWtlKCk7XG5cbiAgICAvKtGD0LTQsNC70LXQvdC40LUqL1xuICAgIHRoaXMuX2RlbGV0ZdChYXJkID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2Jhc2tldHNcIik7XG4gICAgdGhpcy5fcmVtb3ZlQmFja2VkKCk7XG4gICAgXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnNBbGwoKTtcblxuICAgIC8q0JfQsNGJ0LjRgtCwLNC10YHQu9C4INC/0YDQuNC00LXRgiDQvdC1INC60L7RgNGA0LXQutGC0L3QsNGPINC40L3RhNC+0YDQvNCw0YbQuNGPINC40YHQv9C+0LvRjNC30YPQtdC8ID8qL1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X190aXRsZVwiKS50ZXh0Q29udGVudCA9XG4gICAgdGhpcy5fZGF0YT8ubmFtZTtcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fZGF0YT8ubGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fZGF0YT8ubGluaztcblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgfVxuXG4gIC8q0YTRg9C90LrRhtC40Y8g0LTQu9GPINC/0L7QtNGB0YfQtdGC0LAg0LvQsNC50LrQvtCyKi9cblxuICBpc0xpa2VkKCl7XG4gICAgcmV0dXJuIHRoaXMuX2RhdGEubGlrZXMuc29tZSgoaXRlbSkgPT57XG5cbiAgICAgIHJldHVybiBpdGVtLl9pZCA9PT0gdGhpcy5fdXNlcklkO1xuICAgICAgXG4gIH0pXG59XG4gIF9jb3VudGluZ0xpa2UoKXtcbiAgICB0aGlzLl9jb3VudGVyc0xpa2VzLnRleHRDb250ZW50ID0gdGhpcy5fZGF0YS5saWtlcy5sZW5ndGg7XG4gICAgIGlmKHRoaXMuaXNMaWtlZCgpKSB7XG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKTtcbiAgICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZShcImVsZW1lbnRfX2xpa2VfYWN0aXZlXCIpO1xuICAgICB9XG4gIH1cblxuICByZXNldExpa2VEYXRhKGRhdGEpe1xuICAgIHRoaXMuX2RhdGEubGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIHRoaXMuX2NvdW50aW5nTGlrZSgpO1xuICBcbiAgfVxuICBcblxuICAvKtCj0LTQsNC70LXQvdC40LUqL1xuXG4gIF9yZW1vdmVCYWNrZWQoKXtcbiAgICBpZih0aGlzLl9kYXRhLm93bmVyLl9pZCA9PT0gdGhpcy5fdXNlcklkKSB7XG5cbiAgICAgIHRoaXMuX2RlbGV0ZdChYXJkLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19iYXNrZXRzX2FjdGl2ZVwiKTtcbiAgICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2RlbGV0ZdChYXJkLmNsYXNzTGlzdC5yZW1vdmUoXCIuZWxlbWVudF9fYmFza2V0c19hY3RpdmVcIik7XG4gICAgIH1cbiAgfVxuXG4gIHJlbW92ZSgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZShcIi5lbGVtZW50XCIpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgIFxuICB9XG5cbiAgLyrQodC70YPRiNCw0YLQtdC70LgqL1xuXG4gIF9zZXRFdmVudExpc3RlbmVyc0FsbCgpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9wdXRMaWtlQ2FyZCh0aGlzKTtcbiAgICB9KTtcbiAgICB0aGlzLl9kZWxldGXQoWFyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlUmVtb3ZlQ2xpY2sodGhpcykgKTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VPcGVuUG9wdXAodGhpcy5fZGF0YSlcbiAgICB9KTtcbiAgICAvKtCV0YHQu9C4INC60LDRgNGC0LjQvdC60LAg0L/RgNC40YXQvtC00LjRgiDQsdC40YLQsNGPKi9cblxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgKCkgPT4ge1xuICAgIHRoaXMuX2RhdGEubGluayA9IGltYWdlR2xhc3M7XG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IGltYWdlR2xhc3M7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3RpdGxlXCIpLnRleHRDb250ZW50ICA9IFwi0JrQsNGA0YLQuNC90LrQsCDQstC/0YPRgtC4XCI7XG4gICAgfSk7XG4gIH1cblxuICBnZXRJZCgpe1xuICAgIHJldHVybiB0aGlzLl9kYXRhLl9pZDtcbiAgfVxuICBcbn1cbiIsImV4cG9ydCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZy5idXR0b25FbGVtZW50KTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9jb25maWcuaW5wdXRQb3B1cClcbiAgICApO1xuICB9XG5cbiAgLyrQvtCx0YDQsNCx0L7RgtGH0LjQutC4INGB0L7QsdGL0YLQuNC5Ki9cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9pbnB1dEVsZW1lbnQgPSBpbnB1dEVsZW1lbnQ7XG4gICAgICAgIHRoaXMuX2lzVmFsaWQoKTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyrRhNGD0L3QutGG0LjRjyDQv9GA0L7QstC10YDQutC4INCy0LDQu9C40LTQsNGG0LjQuCovXG4gIF9pc1ZhbGlkKCkge1xuICAgIGlmICghdGhpcy5faW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcigpO1xuICAgIH1cbiAgfVxuXG4gIC8q0L/QvtC60LDQt9GL0LLQsNC10YIg0Y3Qu9C10LzQtdC90YIg0L7RiNC40LHQutC4Ki9cbiAgX3Nob3dJbnB1dEVycm9yKCkge1xuICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IHRoaXMuX2lucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCNlcnJvci0ke3RoaXMuX2lucHV0RWxlbWVudC5pZH1gXG4gICAgKTtcbiAgICBcbiAgICB0aGlzLl9jb250ZWluZXJFbGVtZW50ID0gdGhpcy5fZXJyb3JFbGVtZW50LmNsb3Nlc3QoXG4gICAgICB0aGlzLl9jb25maWcuY29udGVpbmVySW5wdXRcbiAgICApO1xuICAgIHRoaXMuX2NvbnRlaW5lckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5wdXRDb250ZWluZXJJbnZhbGlkKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gIH1cblxuICAvKtGB0LrRgNGL0LLQsNC10YIg0Y3Qu9C10LzQtdC90YIg0L7RiNC40LHQutC4Ki9cbiAgX2hpZGVJbnB1dEVycm9yKCkge1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgI2Vycm9yLSR7dGhpcy5faW5wdXRFbGVtZW50LmlkfWBcbiAgICApO1xuICAgIHRoaXMuX2NvbnRlaW5lckVsZW1lbnQgPSB0aGlzLl9lcnJvckVsZW1lbnQuY2xvc2VzdChcbiAgICAgIHRoaXMuX2NvbmZpZy5jb250ZWluZXJJbnB1dFxuICAgICk7XG4gICAgdGhpcy5fY29udGVpbmVyRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbnB1dENvbnRlaW5lckludmFsaWQpO1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiIFwiO1xuICB9XG5cbiAgLyrQvtGC0LrQu9GO0YfQsNC10YIg0LrQvdC+0L/QutGDKi9cbiAgZGlzYWJsZWRCdXR0b24oKSB7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbmFjdGl2ZUJ1dHRvbik7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcImRpc2FibGVkXCIpO1xuICB9XG5cbiAgZGlzYWJsZWRCdXR0b25BY3RpdigpIHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xuICB9XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICghdGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuZGlzYWJsZWRCdXR0b25BY3RpdigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRpc2FibGVkQnV0dG9uKCk7XG4gICAgfVxuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9pbnB1dExpc3QpLnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cblxuICAvKtC90LDRhdC+0LTQuNGCINC4INC/0LXRgNC10LHQuNGA0LDQtdGCINCy0YHQtSDRhNC+0YDQvNGLKi9cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoY29udGVpbmVyU2VjdGlvbiwgcmVuZGVyZXIpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRlaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGVpbmVyU2VjdGlvbik7XG4gIH1cbiAgYWRkSXRlbShub2RlKSB7XG4gICAgdGhpcy5fY29udGVpbmVyLnByZXBlbmQobm9kZSk7XG4gIH1cbiAgcmVuZGVyZXJJdGVtKGRhdGFBcnJheSkge1xuICAgIGRhdGFBcnJheS5mb3JFYWNoKChkYXRhRWxlbWVudHMpID0+IHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGRhdGFFbGVtZW50cyk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZXZ0KSA9PiB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH07XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2dCkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwXCIpIHx8XG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfX2Nsb3NlXCIpXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBmb3JtU2VsZWN0b3IsIHN1Ym1pdEhhbmRsZXIgPSBudWxsKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9yKTtcbiAgICB0aGlzLl9zdWJtaXRIYW5kbGVyID0gc3VibWl0SGFuZGxlcjtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcbiAgfVxuXG4gIFxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgZm9ybUl0ZW1PYmplY3QgPSB7fTtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBmb3JtSXRlbU9iamVjdFtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBmb3JtSXRlbU9iamVjdDtcbiAgfVxuXG4gIGNoYW5nZVN1Ym1pdEhhbmRsZXIobmV3U3VibWl0SGFuZGxlcikge1xuICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIgPSBuZXdTdWJtaXRIYW5kbGVyO1xuICB9XG4gIFxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9zdWJtaXRIYW5kbGVyKHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgIH0pO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTsgXG4gIH1cbn1cbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faW1hZ2VDYXJkID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XG4gICAgdGhpcy5fcG9wdXBIZWFkaW5nID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faGVhZGluZ1wiKTtcbiAgfVxuXG4gIG9wZW4oeyBuYW1lLCBsaW5rIH0pIHtcbiAgICB0aGlzLl9pbWFnZUNhcmQuc3JjID0gbGluaztcbiAgICB0aGlzLl9pbWFnZUNhcmQuYWx0ID0gbmFtZTtcbiAgICB0aGlzLl9wb3B1cEhlYWRpbmcudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuXG4iLCJleHBvcnQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7ZGF0YSwgcHJvZmlsZVRleHQsIHByb2ZpbGVUaXRsZSwgcG9maWxlQXZhdGFyfSkge1xuICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgIHRoaXMuX25hbWUgPSBwcm9maWxlVGV4dDtcbiAgICB0aGlzLl9hYm91dCA9IHByb2ZpbGVUaXRsZTtcbiAgICB0aGlzLl9hdmF0YXIgPSBwb2ZpbGVBdmF0YXI7IFxuICB9XG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcbiAgICBhYm91dDogdGhpcy5fYWJvdXQudGV4dENvbnRlbnQsXG4gICAgYXZhdGFyOiB0aGlzLl9hdmF0YXIuc3JjXG4gIH1cbn1cbiAgc2V0VXNlckluZm8oZGF0YSkge1xuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgfVxuXG59XG4iLCJleHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtRWxlbWVudDogXCIucG9wdXBfX2Zvcm1cIixcbiAgaW5wdXRQb3B1cDogXCIucG9wdXBfX2lucHV0XCIsXG4gIGJ1dHRvbkVsZW1lbnQ6IFwiLnBvcHVwX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b246IFwiYnV0dG9uX2luYWN0aXZlXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJwb3B1cF9fZXJyb3JfdmlzaWJsZVwiLFxuICBpbnB1dENvbnRlaW5lckludmFsaWQ6IFwiaW5wdXQtY29udGVpbmVyX19pbnZhbGlkXCIsXG4gIGNvbnRlaW5lcklucHV0OiBcIi5pbnB1dC1jb250ZWluZXJcIixcbn07XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190ZXh0XCIpO1xuZXhwb3J0IGNvbnN0IHBvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xuXG5cbiIsIlxyXG5leHBvcnQgY2xhc3MgQXBpe1xyXG4jb25SZXNwb25zZShyZXNwb25zZSl7XHJcbiAgaWYgKHJlc3BvbnNlLm9rKSB7XHJcbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3Qoe21lc3NhZ2U6IGDQntGI0LjQsdC60LAg0L7RgtC/0YDQsNCy0LrQuCDQutCw0YDRgtC40L3QutC4INC90LAg0YHRgtC+0YDQvtC90LUg0YHQtdGA0LLQtdGA0LBgLCByZXNwb25zZX0pO1xyXG4gIH1cclxufVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3Mpe1xyXG4gICAgICAgIHRoaXMuX3VybCA9IGNvbmZpZ3MudXJsO1xyXG4gICAgICAgIHRoaXMuX2hlYWRlcnMgPSBjb25maWdzLmhlYWRlcnM7XHJcbiAgICB9XHJcbiAgICAvKtC30LDQs9GA0YPQt9C60LAg0LrQsNGA0YLQvtGH0LXQuiDRgSDRgdC10YDQstC10YDQsCovXHJcbiAgICBnZXRBbGxUYXNrcygpe1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L2NhcmRzYCwge1xyXG4gICAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnN9KVxyXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMuI29uUmVzcG9uc2UocmVzcG9uc2UpO1xyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIC8q0L/QvtC70L3QsNGPINC40L3RhNC+0YDQvNCw0YbQuNGPINC/0YDQuCDQt9Cw0LPRgNGD0LfQutC1Ki9cclxuXHJcbiAgZ2V0QWxsSW5mbygpIHtcclxuICAgIHJldHVybiBQcm9taXNlLmFsbChbdGhpcy5nZXRBbGxQcm9maWxlKCksIHRoaXMuZ2V0QWxsVGFza3MoKV0pXHJcbiAgfVxyXG5cclxuLyrQtNC+0LHQsNCy0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4INC90LAg0YHQtdGA0LLQtdGAKi9cclxuICBhZGROZXdUYXNrcyhmb3JtSXRlbU9iamVjdCl7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGZvcm1JdGVtT2JqZWN0KVxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI29uUmVzcG9uc2UocmVzcG9uc2UpO1xyXG4gIH0pXHJcbiAgfVxyXG5cclxuICAgIHJlbW92ZUNhcmQoaWRDYXJkKXtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkcy8ke2lkQ2FyZH1gLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnN9KVxyXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICByZXR1cm4gdGhpcy4jb25SZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICB9KVxyXG4gIH1cclxuLyrQt9Cw0LPRgNGD0LfQutCwINC/0YDQvtGE0LjQu9GPINGB0YHQtdGA0LLQtdGA0LAqL1xyXG4gICAgZ2V0QWxsUHJvZmlsZSgpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc30pXHJcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLiNvblJlc3BvbnNlKHJlc3BvbnNlKTtcclxuICAgICAgICB9KVxyXG59XHJcbi8q0LfQsNCz0YDRg9C30LrQsCDQvdCwINGB0LXRgNCy0LXRgCDQvdC+0LLRi9GFINC00LDQvdC90YvRhSDQv9GA0L7RhNC40LvRjyovXHJcblxyXG5hZGROZXdQcm9maWxlKGZvcm1JdGVtT2JqZWN0KSB7XHJcbiAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTpKU09OLnN0cmluZ2lmeShmb3JtSXRlbU9iamVjdClcclxuICAgIFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI29uUmVzcG9uc2UocmVzcG9uc2UpO1xyXG4gIH0pXHJcbn1cclxuXHJcbmNoYW5nZUxpa2UoaWRDYXJkLCBpc0xpa2UpIHtcclxuICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkcy8ke2lkQ2FyZH0vbGlrZXNgLCB7XHJcbiAgICBtZXRob2Q6IGlzTGlrZSA/ICdERUxFVEUnIDogJ1BVVCcsXHJcbiAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzfSlcclxuLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiByZXR1cm4gdGhpcy4jb25SZXNwb25zZShyZXNwb25zZSk7XHJcbn0pXHJcbn1cclxuXHJcbi8q0KHQvNC10L3QsCDQsNCy0LDRgtCw0YDQutC4Ki9cclxuXHJcbmFkZE5ld0F2YXRhcihhdmF0YXIpIHtcclxuICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTpKU09OLnN0cmluZ2lmeSh7YXZhdGFyfSlcclxuICAgIFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI29uUmVzcG9uc2UocmVzcG9uc2UpO1xyXG4gIH0pXHJcbn1cclxuIFxyXG59XHJcblxyXG4iLCIvKtCf0L7QtNC60LvRjtGH0LXQvdC40LUqL1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCB7IEZvcm1WYWxpZGF0b3IgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgeyBTZWN0aW9uIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHsgUG9wdXBXaXRoRm9ybSB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCB7IFBvcHVwV2l0aEltYWdlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCB7IGNvbmZpZywgcHJvZmlsZVRpdGxlLCBwcm9maWxlVGV4dCwgIHBvZmlsZUF2YXRhcn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuXG5cbi8qQXBpKi9cblxuY29uc3QgY29uZmlncyA9IHtcbiAgdXJsOidodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTU0JyxcbiAgaGVhZGVyczoge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjpcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIGF1dGhvcml6YXRpb246JyBiODRjNzIyMy02NmM3LTQ4NTktYjMzZi05YjFjMTkyYjVmMDcnXG4gIH1cbn1cbmNvbnN0IGFwaSA9IG5ldyBBcGkoY29uZmlncyk7XG5cbi8q0J/QtdGA0LLRi9C5IHBvcHVwKi9cbmNvbnN0IGJ1dHRvbkVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcbmNvbnN0IGZvcm1FZGl0UHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1fZWRpdC1idXR0b25cIik7XG5jb25zdCBidXR0b25Qb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2J1dHRvblwiKTtcblxuXG4vKtCk0L7RgNC80LAg0J/RgNC+0YTQuNC70Y8qL1xuY29uc3QgdXNlck5ldyA9IG5ldyBVc2VySW5mbyh7cHJvZmlsZVRleHQsIFxuICBwcm9maWxlVGl0bGUsIFxuICBwb2ZpbGVBdmF0YXJ9KTtcblxuLyoxLtC/0L7Qu9GD0YfQtdC90LjQtSBpZCDQuCDQt9Cw0LPRgNGD0LfQutCwINC00LDQvdC90YvRhSovXG5cbmFwaS5nZXRBbGxJbmZvKClcbi50aGVuKChbcHJvZmlsZURhdGEsIHBvc3RBbGxDYXJkc10pID0+IHtcbiAgdXNlcklkID0gcHJvZmlsZURhdGEuX2lkO1xuICBzZWN0aW9uLnJlbmRlcmVySXRlbShwb3N0QWxsQ2FyZHMpO1xuICB1c2VyTmV3LnNldFVzZXJJbmZvKHByb2ZpbGVEYXRhKTtcbiAgXG59KVxuLmNhdGNoKGZ1bmN0aW9uKGVycil7XG4gIGNvbnNvbGUubG9nKCfQntGI0LjQsdC60LAnLCBlcnIpO1xufSk7XG5cbi8qMi7RgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1INC/0YDQvtGE0LjQu9GPKi9cblxuLyphLiDQstCw0LvQuNC00LDRhtC40Y8g0YTQvtGA0LzRiyovXG5jb25zdCBmb3JtVmFsaWRFZGl0UHJvZmlsZSA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybUVkaXRQcm9maWxlKTtcbmZvcm1WYWxpZEVkaXRQcm9maWxlLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuLyrQntGC0L/RgNCw0LLQutCwINC30LDQv9GA0L7RgdCwINC90LAg0YHQtdGA0LLQtdGAINC4INGB0LzQtdC90LAg0LTQsNC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyovXG5mdW5jdGlvbiBoYW5kbGVFZGl0Rm9ybVN1Ym1pdChmb3JtSXRlbU9iamVjdCkge1xuICBjb25zdCBpbml0aWFsVGV4dCA9IGJ1dHRvblBvcHVwLnRleHRDb250ZW50O1xuICBidXR0b25Qb3B1cC50ZXh0Q29udGVudCA9ICfQodC+0YXRgNCw0L3QtdC90LjQtS4uLic7XG5cbiAgYXBpLmFkZE5ld1Byb2ZpbGUoZm9ybUl0ZW1PYmplY3QpXG4gIC50aGVuKChyZXMpID0+IHsgXG4gICAgdXNlck5ldy5zZXRVc2VySW5mbyhyZXMpO1xuICAgIHBvcHVwRWRpdENhcmQuY2xvc2UoKTtcbiAgfSlcbiAgLmZpbmFsbHkoKCkgPT4ge1xuICAgIGJ1dHRvblBvcHVwLnRleHRDb250ZW50ID0gaW5pdGlhbFRleHRcbiAgfSlcbiAgLmNhdGNoKGZ1bmN0aW9uKGVycil7XG4gICAgY29uc29sZS5sb2coJ9Ce0YjQuNCx0LrQsCcsIGVycik7XG4gIH0pO1xufTtcblxuXG5jb25zdCBwb3B1cEVkaXRDYXJkID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gIFwiLnBvcHVwX2VkaXQtYnV0dG9uXCIsXG4gIFwiLnBvcHVwX19mb3JtX2VkaXQtYnV0dG9uXCIsXG4gICAgaGFuZGxlRWRpdEZvcm1TdWJtaXRcbik7XG5wb3B1cEVkaXRDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmJ1dHRvbkVkaXRQcm9maWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gIHBvcHVwRWRpdENhcmQub3BlbigpO1xuICBmb3JtVmFsaWRFZGl0UHJvZmlsZS5kaXNhYmxlZEJ1dHRvbigpO1xuICAvKmNvbnN0IHtuYW1lLCBhYm91dH0gPSB1c2VyTmV3LmdldFVzZXJJbmZvKCk7XG4gIG5hbWVJbnB1dC52YWx1ZSA9IG5hbWU7XG4gIGpvYklucHV0LnZhbHVlID1hYm91dDsqL1xufSk7XG5cblxuLyrQmNC30LzQtdC90LXQvdC40LUg0LDQstCw0YLQsNGA0LrQuCovXG5cbmNvbnN0IGJ1dHRvbkF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xuY29uc3QgZm9ybUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1fY2hhbmdpbmctYXZhdGFyXCIpO1xuY29uc3QgYXZhdGFyUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnV0dG9uLWF2YXRhclwiKVxuXG5cbmNvbnN0IGZvcm1WYWxpZEF2YXRhciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybUF2YXRhcik7XG5mb3JtVmFsaWRBdmF0YXIuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5jb25zdCBwb3B1cEF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuXCIucG9wdXBfY2hhbmdpbmctYXZhdGFyXCIsIFxuXCIucG9wdXBfX2Zvcm1fY2hhbmdpbmctYXZhdGFyXCIsXG4gaGFuZGxlQXZhdGFyQ2xpY2spO1xucG9wdXBBdmF0YXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuXG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJDbGljayhkYXRhKSB7XG4gIGNvbnN0IGluaXRpYWxUZXh0ID0gYXZhdGFyUmVtb3ZlLnRleHRDb250ZW50O1xuICBhdmF0YXJSZW1vdmUudGV4dENvbnRlbnQgPSAn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nO1xuICBhcGkuYWRkTmV3QXZhdGFyKGRhdGEuYXZhdGFyKVxuICAudGhlbigocmVzKSA9PiB7IFxuICAgIHVzZXJOZXcuc2V0VXNlckluZm8ocmVzKTtcbiAgICBwb3B1cEF2YXRhci5jbG9zZSgpO1xuICB9KVxuICAuZmluYWxseSgoKSA9PiB7XG4gICAgYXZhdGFyUmVtb3ZlLnRleHRDb250ZW50ID0gaW5pdGlhbFRleHQ7XG4gIH0pXG4gIC5jYXRjaChmdW5jdGlvbihlcnIpe1xuICAgIGNvbnNvbGUubG9nKCfQntGI0LjQsdC60LAnLCBlcnIpO1xuICB9KTtcbiAgXG59XG5cblxuXG5idXR0b25BdmF0YXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgcG9wdXBBdmF0YXIub3BlbigpO1xuICBmb3JtVmFsaWRBdmF0YXIuZGlzYWJsZWRCdXR0b24oKTtcbn0pO1xuXG4vKnpvb20qL1xuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZU9wZW5Qb3B1cChkYXRhKSB7XG4gIHBvcHVwWm9vbUltYWdlLm9wZW4oZGF0YSk7XG59XG5cbi8q0YPQtNCw0LvQtdC90LjQtSovXG5cbmNvbnN0IHBvcHVwUmVtb3ZlID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIucG9wdXBfcmVtb3ZlXCIsIFwiLnBvcHVwX19mb3JtX3JlbW92ZVwiKTtcbnBvcHVwUmVtb3ZlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmZ1bmN0aW9uIGhhbmRsZVJlbW92ZUNsaWNrKGNhcmRJbnN0YW5jZSkge1xuICBwb3B1cFJlbW92ZS5vcGVuKCk7XG4gIHBvcHVwUmVtb3ZlLmNoYW5nZVN1Ym1pdEhhbmRsZXIoKCkgPT4ge1xuICBhcGkucmVtb3ZlQ2FyZChjYXJkSW5zdGFuY2UuZ2V0SWQoKSlcbiAgLnRoZW4oKCkgPT4ge1xuICAgIGNhcmRJbnN0YW5jZS5yZW1vdmUoKTtcbiAgICBwb3B1cFJlbW92ZS5jbG9zZSgpO1xuICB9KVxuICAuY2F0Y2goZnVuY3Rpb24oZXJyKXtcbiAgICBjb25zb2xlLmxvZygn0J7RiNC40LHQutCwJywgZXJyKTtcbiAgfSk7XG59KVxufTtcblxuLyrQv9C+0YHRgtCw0L3QvtCy0LrQsCDQu9Cw0LnQutCwKi9cblxuZnVuY3Rpb24gcHV0TGlrZUNhcmQoaW5zdGFuY2UpIHtcbiAgYXBpLmNoYW5nZUxpa2UoaW5zdGFuY2UuZ2V0SWQoKSwgaW5zdGFuY2UuaXNMaWtlZCgpKVxuICAudGhlbihkYXRhQ2FyZFNlcnZlciA9PiB7XG4gICAgaW5zdGFuY2UucmVzZXRMaWtlRGF0YShkYXRhQ2FyZFNlcnZlcilcbiAgfSlcbiAgLmNhdGNoKGZ1bmN0aW9uKGVycil7XG4gICAgY29uc29sZS5sb2coJ9Ce0YjQuNCx0LrQsCcsIGVycik7XG4gIH0pO1xufVxuXG5jb25zdCBwb3B1cFpvb21JbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIi5wb3B1cF96b29tXCIpO1xucG9wdXBab29tSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLypiINC00LXQudGB0YLQstC40Y8g0YEg0LrQsNGA0YLQvtGH0LrQsNC80LgqL1xuZnVuY3Rpb24gY3JlYXRlQ2FyZChkYXRhKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZCAoeyBkYXRhLCBoYW5kbGVJbWFnZU9wZW5Qb3B1cCwgaGFuZGxlUmVtb3ZlQ2xpY2ssIHVzZXJJZCwgcHV0TGlrZUNhcmQsXG59LCBcIi5lbGVtZW50cy10ZW1wbGF0ZVwiKTtcblxuICByZXR1cm4gY2FyZC5nZW5lcmF0ZUNhcmQoKTsgIFxufVxuXG4vKtCU0L7QsdCw0LLQu9C10L3QuNC1INC60LDRgNGC0L7Rh9C10LoqL1xuY29uc3QgZm9ybUFkZENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtX2FkZC1idXR0b25cIik7XG5jb25zdCBidXR0b25BZGRDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuXG4vKtCwLkFwaSDQt9Cw0LPRgNGD0LfQutCwINC60LDRgNGC0L7Rh9C10Log0YEg0YHQtdGA0LLQtdGA0LAqL1xuXG5sZXQgdXNlcklkID0gbnVsbDtcblxuXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXCIuZWxlbWVudHNcIiwgKGRhdGFFbGVtZW50cykgPT4ge1xuICBzZWN0aW9uLmFkZEl0ZW0oY3JlYXRlQ2FyZChkYXRhRWxlbWVudHMpKTtcbn0pO1xuXG4vKtCk0L7RgNC80LAg0J3QvtCy0L7QtSDQvNC10YHRgtC+INC00L7QsdCw0LLQu9C10L3QuNC1INC90L7QstC+0Lkg0LrQsNGA0YLQvtGH0LrQuCovXG5cbi8qMS7QktCw0LvQuNC00LDRhtC40Y8g0YTQvtGA0LzRiyDQndC+0LLQvtC1INC80LXRgdGC0L4qL1xuY29uc3QgZm9ybVZhbGlkQWRkQ2FyZCA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybUFkZENhcmQpO1xuZm9ybVZhbGlkQWRkQ2FyZC5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IGJ1dHRvbkNhcmRSZW1vdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b24tYWRkXCIpXG5cbi8qMi7QtNC+0LHQsNCy0LvQtdC90LjQtSDQvdC+0LLQvtC5INC60LDRgNGC0L7Rh9C60LgqL1xuZnVuY3Rpb24gaGFuZGxlQWRkRm9ybVN1Ym1pdCggZm9ybUl0ZW1PYmplY3QpIHtcbiAgY29uc3QgaW5pdGlhbFRleHQgPSBidXR0b25DYXJkUmVtb3ZlLnRleHRDb250ZW50O1xuICBidXR0b25DYXJkUmVtb3ZlLnRleHRDb250ZW50ID0gJ9Ch0L7Qt9C00LDQvdC40LUuLi4nO1xuICBhcGkuYWRkTmV3VGFza3MoZm9ybUl0ZW1PYmplY3QpXG4gIC50aGVuKChkYXRhKSA9PiB7IFxuICAgIHNlY3Rpb24uYWRkSXRlbShjcmVhdGVDYXJkKGRhdGEpKTtcbiAgICBwb3B1cEFkZENhcmQuY2xvc2UoKTtcbiAgfSlcbiAgLmZpbmFsbHkoKCkgPT4ge1xuICAgIGJ1dHRvbkNhcmRSZW1vdmUudGV4dENvbnRlbnQgPSBpbml0aWFsVGV4dFxuICB9KVxuICAuY2F0Y2goZnVuY3Rpb24oZXJyKXtcbiAgICBjb25zb2xlLmxvZygn0J7RiNC40LHQutCwJywgZXJyKTtcbiAgfSk7XG59O1xuXG5jb25zdCBwb3B1cEFkZENhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5wb3B1cF9hZGQtYnV0dG9uXCIsIFwiLnBvcHVwX19mb3JtX2FkZC1idXR0b25cIiwgaGFuZGxlQWRkRm9ybVN1Ym1pdCk7XG5wb3B1cEFkZENhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYnV0dG9uQWRkQ2FyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICBwb3B1cEFkZENhcmQub3BlbigpO1xuICBmb3JtVmFsaWRBZGRDYXJkLmRpc2FibGVkQnV0dG9uKCk7XG59KTsiXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsImciLCJnbG9iYWxUaGlzIiwidGhpcyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImRvY3VtZW50IiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImxlbmd0aCIsIkVycm9yIiwicmVwbGFjZSIsInAiLCJDYXJkIiwiY2FyZFNlbGVjdG9yIiwiZGF0YSIsImhhbmRsZUltYWdlT3BlblBvcHVwIiwiaGFuZGxlUmVtb3ZlQ2xpY2siLCJ1c2VySWQiLCJwdXRMaWtlQ2FyZCIsIl9kYXRhIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZU9wZW5Qb3B1cCIsIl9oYW5kbGVSZW1vdmVDbGljayIsIl91c2VySWQiLCJfcHV0TGlrZUNhcmQiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9jYXJkSW1hZ2UiLCJxdWVyeVNlbGVjdG9yIiwiX2xpa2VCdXR0b24iLCJfY291bnRlcnNMaWtlcyIsIl9jb3VudGluZ0xpa2UiLCJfZGVsZXRl0KFhcmQiLCJfcmVtb3ZlQmFja2VkIiwiX3NldEV2ZW50TGlzdGVuZXJzQWxsIiwidGV4dENvbnRlbnQiLCJuYW1lIiwibGluayIsImFsdCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJsaWtlcyIsInNvbWUiLCJpdGVtIiwiX2lkIiwiaXNMaWtlZCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsIm93bmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImltYWdlR2xhc3MiLCJGb3JtVmFsaWRhdG9yIiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfY29uZmlnIiwiX2Zvcm1FbGVtZW50IiwiX2J1dHRvbkVsZW1lbnQiLCJidXR0b25FbGVtZW50IiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFBvcHVwIiwiZm9yRWFjaCIsImlucHV0RWxlbWVudCIsIl9pbnB1dEVsZW1lbnQiLCJfaXNWYWxpZCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9lcnJvckVsZW1lbnQiLCJpZCIsIl9jb250ZWluZXJFbGVtZW50IiwiY2xvc2VzdCIsImNvbnRlaW5lcklucHV0IiwiaW5wdXRDb250ZWluZXJJbnZhbGlkIiwiaW5hY3RpdmVCdXR0b24iLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZWRCdXR0b24iLCJkaXNhYmxlZEJ1dHRvbkFjdGl2IiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJTZWN0aW9uIiwiY29udGVpbmVyU2VjdGlvbiIsInJlbmRlcmVyIiwiX3JlbmRlcmVyIiwiX2NvbnRlaW5lciIsIm5vZGUiLCJwcmVwZW5kIiwiZGF0YUFycmF5IiwiZGF0YUVsZW1lbnRzIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwia2V5IiwiY2xvc2UiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiZm9ybVNlbGVjdG9yIiwic3VibWl0SGFuZGxlciIsIl9mb3JtIiwiX3N1Ym1pdEhhbmRsZXIiLCJfaW5wdXRFbGVtZW50cyIsImZvcm1JdGVtT2JqZWN0IiwiaW5wdXQiLCJ2YWx1ZSIsIm5ld1N1Ym1pdEhhbmRsZXIiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlQ2FyZCIsIl9wb3B1cEhlYWRpbmciLCJVc2VySW5mbyIsInByb2ZpbGVUZXh0IiwicHJvZmlsZVRpdGxlIiwicG9maWxlQXZhdGFyIiwiX25hbWUiLCJfYWJvdXQiLCJfYXZhdGFyIiwiYWJvdXQiLCJhdmF0YXIiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwicmVzcG9uc2UiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0IiwibWVzc2FnZSIsImFwaSIsImNvbmZpZ3MiLCJfdXJsIiwidXJsIiwiX2hlYWRlcnMiLCJoZWFkZXJzIiwiZmV0Y2giLCJtZXRob2QiLCJ0aGVuIiwiYWxsIiwiZ2V0QWxsUHJvZmlsZSIsImdldEFsbFRhc2tzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpZENhcmQiLCJpc0xpa2UiLCJhdXRob3JpemF0aW9uIiwiYnV0dG9uRWRpdFByb2ZpbGUiLCJmb3JtRWRpdFByb2ZpbGUiLCJidXR0b25Qb3B1cCIsInVzZXJOZXciLCJnZXRBbGxJbmZvIiwicHJvZmlsZURhdGEiLCJwb3N0QWxsQ2FyZHMiLCJzZWN0aW9uIiwicmVuZGVyZXJJdGVtIiwic2V0VXNlckluZm8iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJmb3JtVmFsaWRFZGl0UHJvZmlsZSIsImVuYWJsZVZhbGlkYXRpb24iLCJwb3B1cEVkaXRDYXJkIiwiaW5pdGlhbFRleHQiLCJhZGROZXdQcm9maWxlIiwicmVzIiwiZmluYWxseSIsInNldEV2ZW50TGlzdGVuZXJzIiwib3BlbiIsImJ1dHRvbkF2YXRhciIsImZvcm1BdmF0YXIiLCJhdmF0YXJSZW1vdmUiLCJmb3JtVmFsaWRBdmF0YXIiLCJwb3B1cEF2YXRhciIsImFkZE5ld0F2YXRhciIsInBvcHVwWm9vbUltYWdlIiwicG9wdXBSZW1vdmUiLCJjYXJkSW5zdGFuY2UiLCJjaGFuZ2VTdWJtaXRIYW5kbGVyIiwicmVtb3ZlQ2FyZCIsImdldElkIiwiaW5zdGFuY2UiLCJjaGFuZ2VMaWtlIiwiZGF0YUNhcmRTZXJ2ZXIiLCJyZXNldExpa2VEYXRhIiwiY3JlYXRlQ2FyZCIsImdlbmVyYXRlQ2FyZCIsImZvcm1BZGRDYXJkIiwiYnV0dG9uQWRkQ2FyZCIsImFkZEl0ZW0iLCJmb3JtVmFsaWRBZGRDYXJkIiwiYnV0dG9uQ2FyZFJlbW92ZSIsInBvcHVwQWRkQ2FyZCIsImFkZE5ld1Rhc2tzIl0sInNvdXJjZVJvb3QiOiIifQ==